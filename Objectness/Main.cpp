// Objectness.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "Objectness.h"
#include "ValStructVec.h"
#include "CmShow.h"

void RunObjectness(CStr &resName, double base, int W, int NSS, int numPerSz);

void illutrateLoG()
{
	for (float delta = 0.5f; delta < 1.1f; delta+=0.1f){
		Mat f = Objectness::aFilter(delta, 8);
		normalize(f, f, 0, 1, NORM_MINMAX);
		CmShow::showTinyMat(format("D=%g", delta), f);
	}
	waitKey(0);
}

int main(int argc, char* argv[])
{
	//CStr wkDir = "D:/WkDir/DetectionProposals/VOC2007/Local/";
	//illutrateLoG();
	RunObjectness("WinRecall.m", 2, 8, 2, 130);

	return 0;
}

void RunObjectness(CStr &resName, double base, int W, int NSS, int numPerSz)
{
	srand((unsigned int)time(NULL));
	DataSetVOC voc("../VOC2007/");
	voc.loadAnnotations();
	//voc2007.loadDataGenericOverCls();

	printf("Dataset:`%s' with %d training and %d testing\n", _S(voc.wkDir), voc.trainNum, voc.testNum);
	printf("%s Base = %g, W = %d, NSS = %d, perSz = %d\n", _S(resName), base, W, NSS, numPerSz);
	
	Objectness objNess(voc, base, W, NSS);

	vector<vector<Vec4i> > boxesTests;
	//objNess.getObjBndBoxesForTests(boxesTests, 250);

	//If running this for the first time, set preloadModel to false.
	//Although it is not tested, ensure that the model is generated by
	//the getObjBndBoxesForTestsFast function and not
	//the getObjBndBoxesForTests function which uses colour information too.

	//To avoid running out of memory, you can load images only during
	//prediction by setting preloadImages to false.

	bool preloadModel = false, preloadImages = false;
	objNess.getObjBndBoxesForTestsFast(boxesTests, numPerSz, preloadModel, preloadImages);
	//objNess.getRandomBoxes(boxesTests);

	//objNess.evaluatePerClassRecall(boxesTests, resName, numPerSz);
	//objNess.illuTestReults(boxesTests);
}
